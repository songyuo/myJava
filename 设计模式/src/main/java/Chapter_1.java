/**
 * 第一章 设计模式入门
 * 定义一个鸭子超类，里面有各种方法，让各个鸭子子类继承，但是有的鸭子不会飞，有的鸭子会飞；有的鸭子这样叫，有的那样叫，这就需要重载
 * 利用超类实现继承, 虽然可以实现代码复用，但是没新增一个子类都要去写覆盖方法，会造成麻烦；
 * 如果利用接口，让需要实现相关功能的鸭子子类实现该接口，比如定义一个飞行行为接口，让会飞的鸭子子类去实现，但这样会造成代码无法复用；
 * 所以，可以定义一个接口，再定义几个不同的飞行子类去实现此接口，这样就可以解决复用问题；
 * 即，在鸭子超类中定义接口，如飞行接口，然后子类继承超类，并在构造器中利用飞行子类去实例化接口
 */

/**
 * 软件开发的不变真理：change
 * 两条设计原则：
 * ①找出应用中可能变化之处，把它们独立出来，不要和不需要变化的代码混在一起
 * ②针对接口编程，而不是针对实现编程
 */
public class Chapter_1 {

    public interface FlyBehavior{

    }

    public interface QuackBehavior{

    }

    public class Duck{

    }
}
